/*
  ==============================================================================

    InputProcessor.cpp
    Created: 23 Jun 2015 3:24:42pm
    Author:  Michael

  ==============================================================================
*/

#include "InputProcessor.h"

InputProcessor::InputProcessor()
{
	fastFourierTransformObject = new Input::FFT();
}
InputProcessor::~InputProcessor(){}

// Sets the current block of audio data to be analysed.
void InputProcessor::SetBlock(juce::AudioSampleBuffer& buffer) {
	currentBuffer = buffer;
}

// Analyses the current block of raw audio input.
void InputProcessor::AnalyseBlock() {
	//For most audio setups the audio will either be mono, or both tracks will be the same
	if (currentBuffer.getNumChannels() >0)
	{
		float* channelData = currentBuffer.getWritePointer(0);
		std::vector<float> sampleData(channelData, channelData + currentBuffer.getNumSamples());

		if (rand() % 10 == 1) {
			float staticTestData[] = { -0.002258, -0.002258, -0.002686, -0.002228, -0.001831, -0.002502, -0.001892, -0.001984, -0.002228, -0.002441, -0.002411, -0.001984, -0.002289, -0.002075, -0.001953, -0.002106, -0.001923, -0.001587, -0.001709, -0.002014, -0.002411, -0.002106, -0.001801, -0.002014, -0.002350, -0.002136, -0.002716, -0.002564, -0.002472, -0.002655, -0.002167, -0.002167, -0.002655, -0.002747, -0.002869, -0.002411, -0.002594, -0.002655, -0.002258, -0.002838, -0.002197, -0.001892, -0.002411, -0.002655, -0.002075, -0.002258, -0.002228, -0.001801, -0.001770, -0.001617, -0.001556, -0.001831, -0.001740, -0.001709, -0.001251, -0.000732, -0.001129, -0.001099, -0.000977, -0.001068, -0.001068, -0.000458, -0.000183, -0.000549, -0.000702, -0.000427, -0.000153, 0.000031, -0.000153, 0.000031, 0.000427, 0.000000, 0.000244, 0.000092, 0.000275, 0.000641, 0.001038, 0.001038, 0.000946, 0.001343, 0.001221, 0.001495, 0.002075, 0.002136, 0.001831, 0.001587, 0.001923, 0.001953, 0.002045, 0.001892, 0.002319, 0.002686, 0.002838, 0.002686, 0.002228, 0.002564, 0.002319, 0.002564, 0.002838, 0.003174, 0.002167, 0.002533, 0.002655, 0.002441, 0.002564, 0.002350, 0.003082, 0.002960, 0.003235, 0.002930, 0.002655, 0.002838, 0.002930, 0.002655, 0.003113, 0.003113, 0.003296, 0.003204, 0.002838, 0.002869, 0.003265, 0.003510, 0.003845, 0.004059, 0.003998, 0.004028, 0.004028, 0.004211, 0.004303, 0.004578, 0.004211, 0.004089, 0.003876, 0.003204, 0.002869, 0.002930, 0.002380, 0.002380, 0.002380, 0.001892, 0.001740, 0.002319, 0.002594, 0.002686, 0.002502, 0.002411, 0.002899, 0.002869, 0.002716, 0.002869, 0.002899, 0.002228, 0.002075, 0.002075, 0.002197, 0.002777, 0.002380, 0.002411, 0.002258, 0.002777, 0.002991, 0.002380, 0.002075, 0.002106, 0.001862, 0.001984, 0.002106, 0.001587, 0.001831, 0.001892, 0.002197, 0.002136, 0.002136, 0.002289, 0.002350, 0.002777, 0.002808, 0.002960, 0.002777, 0.002533, 0.002441, 0.002991, 0.002533, 0.002899, 0.003235, 0.003540, 0.003265, 0.002564, 0.002289, 0.002258, 0.002808, 0.002747, 0.002655, 0.002350, 0.002655, 0.002502, 0.002594, 0.002289, 0.002136, 0.002533, 0.002136, 0.001770, 0.002197, 0.002258, 0.001404, 0.001587, 0.001038, 0.001099, 0.001434, 0.001038, 0.000732, 0.001038, 0.001373, 0.000824, 0.001038, 0.000977, 0.000855, 0.000580, 0.000458, 0.000824, 0.000946, 0.000519, 0.000214, 0.000244, 0.000122, -0.000061, -0.000671, -0.000580, -0.000824, -0.001007, -0.001282, -0.001434, -0.001190, -0.001495, -0.001373, -0.001678, -0.001709, -0.002075, -0.002136, -0.002075, -0.002289, -0.002258, -0.001953, -0.002075, -0.002411, -0.001923, -0.001892, -0.002075, -0.002075, -0.002350, -0.002625, -0.002502, -0.002655, -0.002960, -0.002655, -0.003113, -0.003510, -0.003174, -0.003632, -0.003418, -0.003540, -0.003601, -0.003693, -0.003388, -0.003021, -0.003418, -0.002960, -0.003143, -0.003021, -0.003235, -0.002747, -0.002960, -0.002991, -0.002716, -0.002899, -0.003052, -0.002686, -0.002289, -0.002808, -0.002838, -0.002991, -0.002533, -0.002258, -0.002167, -0.002350, -0.002014, -0.001801, -0.002106, -0.002167, -0.002258, -0.002350, -0.002167, -0.001862, -0.002564, -0.002289, -0.001678, -0.001892, -0.001923, -0.002014, -0.002045, -0.002197, -0.002228, -0.001892, -0.002289, -0.002197, -0.002045, -0.002350, -0.002472, -0.002197, -0.002014, -0.002136, -0.001923, -0.001709, -0.001526, -0.002350, -0.002350, -0.001709, -0.001984, -0.002350, -0.002228, -0.002472, -0.002441, -0.002655, -0.002472, -0.002380, -0.002747, -0.002716, -0.002533, -0.002869, -0.002502, -0.002411, -0.002869, -0.002991, -0.002869, -0.002838, -0.002655, -0.003052, -0.003143, -0.002899, -0.002930, -0.002991, -0.003204, -0.003479, -0.003479, -0.003082, -0.002686, -0.002350, -0.002441, -0.002228, -0.002106, -0.002258, -0.002350, -0.002136, -0.002228, -0.002045, -0.002625, -0.002747, -0.002136, -0.002319, -0.002167, -0.001923, -0.002197, -0.001648, -0.001221, -0.001434, -0.001434, -0.001617, -0.001068, -0.000549, -0.000641, -0.000671, -0.000671, -0.000610, -0.000610, -0.000244, -0.000031, 0.000244, 0.000641, 0.000458, 0.000610, 0.001068, 0.000977, 0.000549, 0.001007, 0.001068, 0.001373, 0.001221, 0.001648, 0.001862, 0.001404, 0.001770, 0.001770, 0.001373, 0.001404, 0.001709, 0.002228, 0.002319, 0.002472, 0.002838, 0.002747, 0.002594, 0.002350, 0.002777, 0.003418, 0.003540, 0.003143, 0.002686, 0.002808, 0.002289, 0.002228, 0.001862, 0.001923, 0.002045, 0.002045, 0.002319, 0.002319, 0.002594, 0.002411, 0.002991, 0.003510, 0.003326, 0.003235, 0.003388, 0.003143, 0.003662, 0.003235, 0.003143, 0.003021, 0.002991, 0.003204, 0.002655, 0.002869, 0.002594, 0.002380, 0.002045, 0.002258, 0.002472, 0.002411, 0.002564, 0.002747, 0.003082, 0.003388, 0.002808, 0.003326, 0.003723, 0.003510, 0.003754, 0.003723, 0.003754, 0.003998, 0.003723, 0.004486, 0.004730, 0.004181, 0.004028, 0.003632, 0.003967, 0.004028, 0.004150, 0.003784, 0.003906, 0.003510, 0.003357, 0.003235, 0.003632, 0.003174, 0.003418, 0.003632, 0.003601, 0.004028, 0.003571, 0.003632, 0.003845, 0.004334, 0.004395, 0.003876, 0.003754, 0.003784, 0.003784, 0.003723, 0.002960, 0.003204, 0.002869, 0.003204, 0.003113, 0.003510, 0.003326, 0.003021, 0.003357, 0.003449, 0.002777, 0.002594, 0.002930, 0.002930, 0.002777, 0.003143, 0.003082, 0.002319, 0.003143, 0.002655, 0.002533, 0.002136, 0.001770, 0.001740, 0.001526, 0.002045, 0.001740, 0.001221, 0.001099, 0.001465, 0.001526, 0.001678, 0.001404, 0.001068, 0.001556, 0.001160, 0.001373, 0.001343, 0.001007, 0.001343, 0.001648, 0.001862, 0.001770, 0.002014, 0.001770, 0.001862, 0.001709, 0.001465, 0.001343, 0.001434, 0.000916, 0.000793, 0.000946, 0.001007, 0.000946, 0.001099, 0.000946, 0.000855, 0.001068, 0.000916, 0.000732, 0.000427, 0.000641, 0.000885, 0.000641, 0.000458, 0.000763, 0.000214, 0.000366, -0.000092, -0.000488, -0.000305, -0.000519, -0.000153, 0.000000, -0.000061, -0.000183, -0.000458, -0.000275, 0.000183, -0.000244, 0.000061, 0.000122, -0.000214, -0.000641, -0.000519, -0.000702, -0.001312, -0.000977, -0.000977, -0.001099, -0.000763, -0.000549, -0.000488, -0.000549, -0.001007, -0.000519, -0.000671, -0.000610, -0.000458, -0.000366, -0.000153, -0.000580, -0.000305, -0.000488, -0.000855, -0.000977, -0.001465, -0.000946, -0.001587, -0.001465, -0.001007, -0.001587, -0.001678, -0.001862, -0.001740, -0.001892, -0.002319, -0.002045, -0.001862, -0.002136, -0.002014, -0.002045, -0.002014, -0.001495, -0.002045, -0.002136, -0.001434, -0.001709, -0.001434, -0.001404, -0.001678, -0.001556, -0.001709, -0.001526, -0.001343, -0.001495, -0.002380, -0.002411, -0.002106, -0.002167, -0.002350, -0.002594, -0.002747, -0.002655, -0.002289, -0.002106, -0.001862, -0.001984, -0.002014, -0.001740, -0.001617, -0.002228, -0.002380, -0.002350, -0.002136, -0.001892, -0.002167, -0.002106, -0.002441, -0.002502, -0.002533, -0.001953, -0.001617, -0.001282, -0.001831, -0.002075, -0.002197, -0.001984, -0.001282, -0.001404, -0.001068, -0.001038, -0.001038, -0.001068, -0.001007, -0.001068, -0.000793, -0.001068, -0.000610, -0.000641, -0.001129, -0.001007, -0.001099, -0.001038, -0.001129, -0.001190, -0.001099, -0.001434, -0.001648, -0.001526, -0.001678, -0.001343, -0.001404, -0.001190, -0.000885, -0.000977, -0.000641, -0.000458, -0.000702, -0.000305, -0.000061, -0.000031, -0.000275, -0.000305, -0.000031, -0.000549, -0.000092, 0.000305, 0.000031, -0.000336, -0.000580, -0.000244, -0.000031, 0.000092, 0.000214, -0.000183, 0.000763, 0.000580, 0.000214, 0.000519, 0.000488, 0.000641, 0.000366, 0.000732, 0.001038, 0.001068, 0.000885, 0.000916, 0.001190, 0.001129, 0.000732, 0.000580, 0.000824, 0.001129, 0.001373, 0.001556, 0.001099, 0.001373, 0.001343, 0.000946, 0.001312, 0.001587, 0.001770, 0.001587, 0.002075, 0.001801, 0.001617, 0.001617, 0.001587, 0.001862, 0.001617, 0.001556, 0.001526, 0.001740, 0.001068, 0.001495, 0.001892, 0.001556, 0.001495, 0.001434, 0.001129, 0.001129, 0.001801, 0.001617, 0.001678, 0.001801, 0.001709, 0.001923, 0.001740, 0.001923, 0.002197, 0.002411, 0.002380, 0.002014, 0.002075, 0.002289, 0.002564, 0.002472, 0.002594, 0.002441, 0.002533, 0.002472, 0.002411, 0.001923, 0.001892, 0.002411, 0.002686, 0.002960, 0.002838, 0.003113, 0.002930, 0.003235, 0.003723, 0.004334, 0.004150, 0.003845, 0.003845, 0.003601, 0.003143, 0.003540, 0.004028, 0.003357, 0.003113, 0.003204, 0.002899, 0.002869, 0.003449, 0.003937, 0.003815, 0.003449, 0.003174, 0.003479, 0.003113, 0.002838, 0.002838, 0.002655, 0.002747, 0.002441, 0.002228, 0.002197, 0.002289, 0.002289, 0.002716, 0.002350, 0.002533, 0.002655, 0.002502, 0.002319, 0.002319, 0.002930, 0.002319, 0.002777, 0.002533, 0.002441, 0.002441, 0.002350, 0.002472, 0.002502, 0.002777, 0.002075, 0.002258, 0.001953, 0.001892, 0.001740, 0.001617, 0.001740, 0.001678, 0.001923, 0.002075, 0.001740, 0.001617, 0.001801, 0.001526, 0.001801, 0.001678, 0.001678, 0.001373, 0.001251, 0.001251, 0.001190, 0.001587, 0.001343, 0.001495, 0.001312, 0.001129, 0.001587, 0.001373, 0.001648, 0.001587, 0.001556, 0.000885, 0.001038, 0.001312, 0.001404, 0.001465, 0.000885, 0.001190, 0.000702, 0.001007, 0.000885, 0.000793, 0.001068, 0.000824, 0.000855, 0.000549, 0.000519, 0.000061, -0.000061, -0.000122, -0.000305, 0.000031, 0.000061, -0.000153, 0.000092, -0.000610, -0.000336, -0.000305, -0.000671, 0.000061, 0.000061, 0.000519, 0.000397, -0.000153, -0.000427, -0.000275, -0.000153, -0.000366, 0.000092, 0.000153, 0.000153, 0.000519, -0.000031, 0.000061, 0.000122, 0.000000, -0.000183, -0.000519, -0.000092, -0.001007, -0.000946, -0.000641, -0.001282, -0.001099, -0.001038, -0.001099, -0.000977, -0.001068, -0.000702, -0.000824, -0.000977, -0.000824, -0.000916, -0.000336, -0.000885, -0.000977, -0.001282, -0.001465, -0.001312, -0.001404, -0.001984, -0.001984, -0.001862, -0.001923, -0.001526, -0.001862, -0.001892, -0.001923, -0.002075, -0.001770, -0.001556, -0.001587, -0.001587, -0.001709, -0.002014, -0.002014, -0.002014, -0.001953, -0.001801, -0.001678, -0.001373, -0.001556, -0.001282, -0.001282, -0.001617, -0.001831, -0.001740, -0.001862, -0.002411, -0.002014, -0.001770, -0.001953, -0.001770, -0.002380, -0.002686, -0.002350, -0.002441, -0.002319, -0.002197, -0.002350, -0.002045, -0.002411, -0.002472, -0.001556, -0.001587, -0.001770, -0.001404, -0.001648, -0.001923, -0.001617, -0.001923, -0.001373, -0.001495, -0.002319, -0.001801, -0.002014, -0.001831, -0.001587, -0.001282, -0.001099, -0.001343, -0.001770, -0.001068, -0.000885, -0.000793, -0.000763, -0.001221, -0.000702, -0.000763, -0.000732, -0.000702, -0.000244, 0.000000, -0.000671, -0.000275, -0.000458, -0.000732, -0.000549, -0.000793, -0.000824, -0.000488, -0.000366, -0.000488, -0.000488, -0.000671, -0.000488, -0.000580, -0.000397, -0.000732, -0.000397, 0.000122, -0.000153, 0.000244, 0.000244, 0.000549, 0.000732, 0.000793, 0.000763, 0.000916, 0.001495, 0.001099, 0.000610, 0.000580, 0.000977, 0.001099, 0.000580, 0.000671, 0.000214, 0.000519, 0.000336, 0.000214, 0.000336, 0.000885, 0.000702, 0.000702, 0.000793, 0.000488, 0.001099, 0.001099, 0.000977, 0.001221, 0.001129, 0.001038, 0.001038, 0.001129, 0.001129, 0.001160, 0.001404, 0.000946, 0.001160, 0.001495, 0.001892, 0.001556, 0.001831, 0.002014, 0.002289, 0.002441, 0.002594, 0.002502, 0.002350, 0.002502, 0.001892, 0.002533, 0.002716, 0.002380, 0.002258, 0.002197, 0.001801, 0.001770, 0.002045, 0.002197, 0.002136, 0.001862, 0.002319, 0.002350, 0.002350, 0.002533, 0.002686, 0.002350, 0.002441, 0.002869, 0.002533, 0.002808, 0.002411, 0.002655, 0.002533, 0.003113, 0.003540, 0.003082, 0.003296, 0.002838, 0.002899, 0.003052, 0.003235, 0.002716, 0.002747, 0.002899, 0.002716, 0.002960, 0.003143, 0.003052, 0.003235, 0.002686, 0.003326, 0.003235, 0.003449, 0.003296, 0.003326, 0.003784, 0.003845, 0.003388, 0.003143, 0.003479, 0.003265, 0.003357, 0.003174, 0.003235, 0.003174, 0.003388, 0.003052, 0.003388, 0.003174, 0.003571, 0.003479, 0.003052, 0.003510, 0.003571, 0.003388, 0.003388, 0.003693, 0.003143, 0.003296, 0.003693, 0.003479, 0.003296, 0.003510, 0.003662, 0.004059, 0.003510, 0.003479, 0.003388, 0.003082, 0.003082, 0.003204, 0.003021, 0.003021, 0.002991, 0.002899, 0.003021, 0.002716, 0.003113, 0.002838, 0.002869, 0.003388, 0.003693, 0.003143, 0.002808, 0.002960, 0.003052, 0.002930, 0.002899, 0.002289, 0.002655, 0.002716, 0.002625, 0.002869, 0.002808, 0.003113, 0.003388, 0.003204, 0.003021, 0.003265, 0.003143, 0.003265, 0.003601, 0.003601, 0.003113, 0.003143, 0.003082, 0.003235, 0.003235, 0.003113, 0.002625, 0.002869, 0.002899, 0.002716, 0.002869, 0.002258, 0.002441, 0.002655, 0.002106, 0.001892, 0.002197, 0.001617, 0.001617, 0.001984, 0.001709, 0.001892, 0.001953, 0.001556, 0.001648, 0.001129, 0.000641, 0.001251, 0.001190, 0.001343, 0.001343, 0.001587, 0.001556, 0.001129, 0.001007, 0.000885, 0.000824, 0.000519, 0.000671, 0.000793, 0.000305, 0.000793, 0.000793, 0.000610, 0.000793, 0.000275, 0.000122, 0.000427, 0.000397, 0.000153, 0.000092, 0.000580, 0.000488, 0.000183, 0.000305, 0.000427, 0.000732, 0.000214, 0.000092, 0.000061, 0.000183, -0.000031, 0.000000, 0.000397, 0.000397, 0.000519, 0.000092, 0.000092, 0.000336, 0.000519, 0.000580, 0.000336, 0.000549, -0.000031, -0.000275, -0.000122, -0.000366, -0.000214, -0.000122, -0.000519, -0.000305, -0.000458, -0.000580, -0.000488, -0.000641, -0.000519, -0.000488, -0.000549, -0.000488, -0.000305, -0.000580, -0.000916, -0.001007, -0.001038, -0.000824, -0.000519, -0.000916, -0.000671, -0.000946, -0.001282, -0.000458, -0.000946, -0.000488, -0.000488, -0.000855, -0.000763, -0.001282, -0.001007, -0.001129, -0.001587, -0.001526, -0.001068, -0.001221, -0.001495, -0.001556, -0.001587, -0.001648, -0.001740, -0.001495, -0.001648, -0.001404, -0.001343, -0.001343, -0.000946, -0.000427, -0.000519, -0.000519, -0.000061, -0.000092, -0.000549, -0.000336, -0.000183, -0.000031, -0.000153, -0.000122, -0.000244, -0.000549, -0.000458, -0.000702, -0.000977, -0.000092, -0.000458, -0.000702, -0.000610, -0.000458, -0.000519, -0.000732, -0.000458, -0.000885, -0.000458, -0.000488, -0.000397, -0.000275, -0.000610, -0.000458, -0.000488, -0.000855, -0.000031, -0.000519, -0.000732, -0.000336, -0.000641, -0.000519, -0.000610, -0.000366, -0.000549, -0.000427, -0.000244, -0.000214, -0.000061, -0.000183, -0.000366, -0.000153, -0.000183, -0.000031, -0.000092, 0.000214, 0.000488, 0.000397, 0.000580, 0.000031, 0.000214, 0.000305, 0.000153, 0.000458, 0.000092, 0.000244, -0.000122, 0.000580, 0.000671, 0.000519, 0.000946, 0.000763, 0.000916, 0.000732, 0.000763, 0.000977, 0.001099, 0.001221, 0.001068, 0.000885, 0.000885, 0.001221, 0.001404, 0.001282, 0.001556, 0.001343, 0.001434, 0.000946, 0.001556, 0.001556, 0.001343, 0.001526, 0.001465, 0.001251, 0.001129, 0.001770, 0.001221, 0.001495, 0.001831, 0.001892, 0.001648, 0.001617, 0.002228, 0.001862, 0.002258, 0.002197, 0.001892, 0.002075, 0.002625, 0.002350, 0.002014, 0.002380, 0.002228, 0.002167, 0.002564, 0.002411, 0.002411, 0.002747, 0.002380, 0.002991, 0.003204, 0.003510, 0.003082, 0.003082, 0.002808, 0.003113, 0.003449, 0.003601, 0.003845, 0.003601, 0.003571, 0.003540, 0.003845, 0.003906, 0.003510, 0.003510, 0.003601, 0.003235, 0.003296, 0.002838, 0.003204, 0.003296, 0.003479, 0.003204, 0.003174, 0.003113, 0.003052, 0.003693, 0.003082, 0.002899, 0.002991, 0.002777, 0.002106, 0.002411, 0.002472, 0.002228, 0.002350, 0.002564, 0.002594, 0.002533, 0.002167, 0.002289, 0.002319, 0.002289, 0.002167, 0.001801, 0.002319, 0.002228, 0.002655, 0.002533, 0.002350, 0.002106, 0.002472, 0.002808, 0.002716, 0.003052, 0.003174, 0.002838, 0.002350, 0.002502, 0.002380, 0.002777, 0.001831, 0.002472, 0.002716, 0.002380, 0.002747, 0.002564, 0.002655, 0.002564, 0.003052, 0.002808, 0.002533, 0.002472, 0.002838, 0.002441, 0.002747, 0.002533, 0.002289, 0.002777, 0.002167, 0.002197, 0.002533, 0.002167, 0.002045, 0.002075, 0.001892, 0.002014, 0.001953, 0.002319, 0.001923, 0.001892, 0.001801, 0.001099, 0.000702, 0.000122, 0.000183, 0.000305, 0.000549, 0.000610, 0.000031, 0.000366, 0.000183, 0.000092, 0.000183, 0.000153, 0.000031, -0.000092, -0.000458, -0.000885, -0.000641, -0.000336, -0.000671, -0.000488, -0.000031, -0.000244, -0.000397, -0.000458, 0.000092, 0.000000, 0.000122, 0.000305, -0.000061, -0.000061, -0.000214, -0.000092, -0.000336, -0.000641, -0.000549, -0.000702, -0.001099, -0.001221, -0.001221, -0.001129, -0.001068, -0.001190, -0.001129, -0.001343, -0.000732, -0.001129, -0.001312, -0.000763, -0.001465, -0.001373, -0.001434, -0.001404, -0.001129, -0.001221, -0.000763, -0.001038, -0.001190, -0.001160, -0.001160, -0.001129, -0.001556, -0.001190, -0.001373, -0.001801, -0.001160, -0.001556, -0.001709, -0.001617, -0.002258, -0.002289, -0.002350, -0.002197, -0.001862, -0.001953, -0.001831, -0.002136, -0.001862, -0.001617, -0.001587, -0.001221, -0.001465, -0.001587, -0.001373, -0.001129, -0.001129, -0.001556, -0.001648, -0.001373, -0.001770, -0.001831, -0.001526, -0.001617, -0.001740, -0.001801, -0.002075, -0.001678, -0.001984, -0.002106, -0.002167, -0.002167, -0.001862, -0.001740, -0.001984, -0.001770, -0.001434, -0.001709, -0.001923, -0.002075, -0.001740, -0.002014, -0.002106, -0.002167, -0.002136, -0.002014, -0.002228, -0.001862, -0.002014, -0.001678, -0.001984, -0.001709, -0.001373, -0.001617, -0.001556, -0.002136, -0.002472, -0.002167, -0.002106, -0.002319, -0.001892, -0.002136, -0.002106, -0.002655, -0.002289, -0.002350, -0.002991, -0.002075, -0.002258, -0.002197, -0.002167, -0.001923, -0.002075, -0.002045, -0.002136, -0.001801, -0.001862, -0.002136, -0.001801, -0.001740, -0.001556, -0.001190, -0.001160, -0.001282, -0.001617, -0.001648, -0.001251, -0.001526, -0.001373, -0.001434, -0.001343, -0.001190, -0.001312, -0.000763, -0.000855, -0.000763, -0.000519, -0.000671, -0.000458, -0.000824, -0.000916, -0.000519, -0.000183, 0.000275, 0.000244, 0.000092, 0.000214, 0.000122, 0.000183, 0.000336, 0.000671, 0.000793, 0.000458, 0.000519, 0.000427, 0.000397, 0.000275, 0.000427, 0.000519, 0.000641, 0.000855, 0.000488, 0.000488, 0.000855, 0.001007, 0.001221, 0.001038, 0.001373, 0.001221, 0.001221, 0.001129, 0.001099, 0.001221, 0.001343, 0.001190, 0.000855, 0.000610, 0.000061, 0.000702, 0.000427, -0.000275, 0.000427, 0.000824, 0.000885, 0.000763, 0.000916, 0.000763, 0.001129, 0.001190, 0.001160, 0.001526, 0.001312, 0.001617, 0.001831, 0.001801, 0.001404, 0.001648, 0.001373, 0.001373, 0.001282, 0.000885, 0.001038, 0.001099, 0.001251, 0.001099, 0.001404, 0.001251, 0.001190, 0.001526, 0.001343, 0.001465, 0.001312, 0.001343, 0.001648, 0.001923, 0.001923, 0.001587, 0.001862, 0.002136, 0.002289, 0.002472, 0.002655, 0.002319, 0.002380, 0.002594, 0.002655, 0.003021, 0.002930, 0.002777, 0.002838, 0.002869, 0.002625, 0.002808, 0.002838, 0.002899, 0.002777, 0.002838, 0.002777, 0.002777, 0.002777, 0.002502, 0.002686, 0.003143, 0.003510, 0.003357, 0.003113, 0.002991, 0.002808, 0.002869, 0.003204, 0.003143, 0.003021, 0.002960, 0.002960, 0.003265, 0.003265, 0.003326, 0.003357, 0.003082, 0.002930, 0.002838, 0.003357, 0.003052, 0.002747, 0.002899, 0.002533, 0.002564, 0.002930, 0.003113, 0.003235, 0.003113, 0.002869, 0.002625, 0.002228, 0.002380, 0.002808, 0.002594, 0.002533, 0.002655, 0.002808, 0.002594, 0.002472, 0.002045, 0.002075, 0.002136, 0.002258, 0.002655, 0.002625, 0.002380, 0.002228, 0.002411, 0.002258, 0.002411, 0.001892, 0.001984, 0.002380, 0.002136, 0.001709, 0.001984, 0.002014, 0.001923, 0.002045, 0.001434, 0.001556, 0.001221, 0.000977, 0.001282, 0.001007, 0.000519, 0.000885, 0.000885, 0.000641, 0.000580, -0.000183, 0.000092, 0.000336, 0.000000, 0.000366, 0.000031, -0.000366, 0.000061, 0.000305, 0.000031, 0.000000, 0.000641, 0.000519, 0.000397, 0.000305, 0.000061, -0.000031, -0.000549, -0.000610, -0.000183, -0.000061, -0.000305, -0.000519, -0.000488, 0.000000, -0.000427, -0.000427, -0.000549, -0.000153, -0.000214, -0.000397, -0.000275, -0.000183, 0.000122, 0.000336, 0.000488, 0.000244, 0.000275, 0.000275, 0.000305, 0.000427, 0.000580, 0.000183, 0.000366, 0.000305, 0.000336, -0.000061, 0.000122, 0.000153, -0.000214, 0.000153, -0.000336, -0.000305, -0.000153, 0.000397, -0.000092, -0.000732, -0.000885, -0.001251, -0.001007, -0.000580, -0.000824, -0.000916, -0.001007, -0.001465, -0.001282, -0.001282, -0.001190, -0.001587, -0.001678, -0.001648, -0.001678, -0.001312, -0.001770, -0.001343, -0.000946, -0.001678, -0.001556, -0.001587, -0.001617, -0.001740, -0.002380, -0.001984, -0.001801, -0.001892, -0.002045, -0.002075, -0.002350, -0.002167, -0.002258, -0.001923, -0.001892, -0.002411, -0.002350, -0.002228, -0.001740, -0.002106, -0.001953, -0.001709, -0.001526, -0.001526, -0.001709, -0.002106, -0.002136, -0.001923, -0.002014, -0.001495, -0.001678, -0.001892, -0.001984, -0.002045, -0.002075, -0.002319, -0.001923, -0.001709, -0.001770, -0.001984, -0.001831, -0.001923, -0.001709, -0.001404, -0.001587, -0.001038, -0.001587, -0.001068, -0.001068, -0.001312, -0.001221, -0.001068, -0.000732, -0.001068, -0.000763, -0.000732, -0.000153, -0.000671, -0.000824, -0.000549, -0.000244, 0.000000, -0.000214, 0.000214, 0.000244, 0.000061, 0.000000, 0.000763, 0.000702, 0.000488, 0.000732, 0.000793, 0.000793, 0.000488, 0.000427, 0.000427, 0.000763, 0.000946, 0.000763, 0.001312, 0.001587, 0.001465, 0.001373, 0.001190, 0.001312, 0.001404, 0.001282, 0.001251, 0.001648, 0.001282, 0.001465, 0.001892, 0.001862, 0.001770, 0.001526, 0.002045, 0.001862, 0.001678, 0.001495, 0.001892, 0.001831, 0.002136, 0.002045, 0.001923, 0.002045, 0.002045, 0.002289, 0.001892, 0.002167, 0.001831, 0.001343, 0.001434, 0.001923, 0.002014, 0.001648, 0.001892, 0.001770, 0.001648, 0.001801 };
			float* testData = staticTestData; 

			fastFourierTransformObject->perform_FFT(channelData, currentBuffer.getNumSamples(), currentBuffer.getNumSamples(), 1);
			
			currentFrequency = fastFourierTransformObject->fundamental_frequency;

#ifdef WIN32
				//Print the frequency (might just be index) of the highest magnitude
				LOG("Highest magnitude of testData is " + std::to_string(fastFourierTransformObject->fundamental_frequency));
#endif
		}

		//Analysis::FFT::PerformFFT(sampleData, currentBuffer.getNumSamples());
	}
	for (int channel = 0; channel < currentBuffer.getNumChannels(); ++channel)
	{
		// Pointer to an array of floats (the actual audio samples in the channel).
		//const float* channelData = currentBuffer.getReadPointer(channel);
		float* channelData = currentBuffer.getWritePointer(channel);

		//std::vector<float> sampleData(channelData, channelData + currentBuffer.getNumSamples());

		// http://stackoverflow.com/questions/10158756/using-stdmax-element-on-a-vectordouble

		//auto biggest = std::max_element(std::begin(sampleData), std::end(sampleData));

		//int position = std::distance(std::begin(sampleData), biggest);

#if FALSE//#ifdef WIN32
		LOG("currentBuffer.getNumSamples() is " + std::to_string(currentBuffer.getNumSamples()));
		LOG("The size of the vector is " + std::to_string(sampleData.size()));
		LOG("The highest magnitude in channel " + std::to_string(channel) + " is " + std::to_string(*biggest) + " at position " + std::to_string(position));
#endif 

		//juce FFT code - being replaced
		//THIS method supposidly does a FFT but I don't know what order it should be nore how to get meaningful data back from it
			//fastFourierTransformObject->performFrequencyOnlyForwardTransform(channelData);

			std::vector<float> sampleData(channelData, channelData + currentBuffer.getNumSamples());
			//auto biggest = std::max_element(std::begin(sampleData), std::end(sampleData));

#if FALSE //ifdef WIN32
			//To stop it printing thousands of lines per second
			if (rand() % 1000 == 1) {
				LOG("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
				// Print all sample data from the first block processed
				// So it can be graphed and we can try to figure out what it means
				for (int i = 0; i < currentBuffer.getNumSamples(); i++) {
					LOG(std::to_string(sampleData[i]));
				}
			}
#endif

		//TODO: Temporary thing matching output frequency to input.
		//	juce::FFT::performFrequencyOnlyForwardTransform(currentBuffer);
		//	juce::

		/* FFT docs and useful links:
		http://www.juce.com/forum/topic/open-source-fft-plugin
		https://github.com/aaronleese/FFT-Plugin
		http://learn.juce.com/doc/classFFT.php

		Also look into this once we think we have a calculated frequency value:
		http://www.juce.com/forum/topic/best-way-update-gui-parameters
		*/
	}
}

// Returns the estimated key of the current block of input.
Key_t InputProcessor::GetKey() {
	return Key_t::A;
}

// Returns the estimated chord of the current block of input.
Chord_t InputProcessor::GetChord() {
	return Chord_t::Placeholder1;
}

float InputProcessor::GetFrequency()
{
	return currentFrequency;
}